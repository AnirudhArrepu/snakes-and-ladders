{"ast":null,"code":"var _jsxFileName = \"/home/anirudh/Desktop/Programming/WebD/snakes-and-ladders/client/src/components/grid.jsx\";\nimport './grid.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Grid({\n  players\n}) {\n  const grid = generate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: grid.map((number, index) => /*#__PURE__*/_jsxDEV(Square, {\n        number: number,\n        players: players\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = Grid;\nfunction generate() {\n  let size = 10;\n  let squares = [];\n  let counter = size * size;\n  for (let row = 0; row < size; row++) {\n    let rowSquares = [];\n    for (let col = 0; col < size; col++) {\n      rowSquares.push(counter);\n      counter--;\n    }\n    if (row % 2 === 1) {\n      rowSquares.reverse();\n    }\n    squares = squares.concat(rowSquares);\n  }\n  return squares;\n}\nfunction Square({\n  number,\n  players\n}) {\n  var backgroundColor = 'transparent';\n\n  // for(const player of  players){\n  //     if(player.position === number){\n  //         backgroundColor = player.color;\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    style: {\n      backgroundColor: backgroundColor\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Square;\nexport default Grid;\nvar _c, _c2;\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"Square\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Fragment","_Fragment","Grid","players","grid","generate","children","className","map","number","index","Square","fileName","_jsxFileName","lineNumber","columnNumber","_c","size","squares","counter","row","rowSquares","col","push","reverse","concat","backgroundColor","style","_c2","$RefreshReg$"],"sources":["/home/anirudh/Desktop/Programming/WebD/snakes-and-ladders/client/src/components/grid.jsx"],"sourcesContent":["import './grid.css'\n\nfunction Grid({players}){\n    const grid = generate();\n    return(\n        <>\n            <div className='grid'>\n                {grid.map((number,index)=>(\n                    <Square key={index} number={number} players={players}/>\n                ))}\n            </div>\n        </>\n    )\n}\n\nfunction generate(){\n    let size = 10;\n    let squares = [];\n    let counter = size * size;\n    \n    for (let row = 0; row < size; row++) {\n        let rowSquares = [];\n        for (let col = 0; col < size; col++) {\n            rowSquares.push(counter);\n            counter--;\n        }\n        if (row % 2 === 1) {\n            rowSquares.reverse();\n        }\n        squares = squares.concat(rowSquares);\n    }\n    return squares;\n}\n\nfunction Square({number, players}){\n    var backgroundColor = 'transparent';\n    \n    // for(const player of  players){\n    //     if(player.position === number){\n    //         backgroundColor = player.color;\n    //     }\n    // }\n\n    return (\n        <button className='square' style={{backgroundColor: backgroundColor}}/>\n    )\n}\n\nexport default Grid"],"mappings":";AAAA,OAAO,YAAY;AAAA,SAAAA,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,IAAIA,CAAC;EAACC;AAAO,CAAC,EAAC;EACpB,MAAMC,IAAI,GAAGC,QAAQ,CAAC,CAAC;EACvB,oBACIN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACIP,OAAA;MAAKQ,SAAS,EAAC,MAAM;MAAAD,QAAA,EAChBF,IAAI,CAACI,GAAG,CAAC,CAACC,MAAM,EAACC,KAAK,kBACnBX,OAAA,CAACY,MAAM;QAAaF,MAAM,EAAEA,MAAO;QAACN,OAAO,EAAEA;MAAQ,GAAxCO,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoC,CACzD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC,gBACR,CAAC;AAEX;AAACC,EAAA,GAXQd,IAAI;AAab,SAASG,QAAQA,CAAA,EAAE;EACf,IAAIY,IAAI,GAAG,EAAE;EACb,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIC,OAAO,GAAGF,IAAI,GAAGA,IAAI;EAEzB,KAAK,IAAIG,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGH,IAAI,EAAEG,GAAG,EAAE,EAAE;IACjC,IAAIC,UAAU,GAAG,EAAE;IACnB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGL,IAAI,EAAEK,GAAG,EAAE,EAAE;MACjCD,UAAU,CAACE,IAAI,CAACJ,OAAO,CAAC;MACxBA,OAAO,EAAE;IACb;IACA,IAAIC,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE;MACfC,UAAU,CAACG,OAAO,CAAC,CAAC;IACxB;IACAN,OAAO,GAAGA,OAAO,CAACO,MAAM,CAACJ,UAAU,CAAC;EACxC;EACA,OAAOH,OAAO;AAClB;AAEA,SAASP,MAAMA,CAAC;EAACF,MAAM;EAAEN;AAAO,CAAC,EAAC;EAC9B,IAAIuB,eAAe,GAAG,aAAa;;EAEnC;EACA;EACA;EACA;EACA;;EAEA,oBACI3B,OAAA;IAAQQ,SAAS,EAAC,QAAQ;IAACoB,KAAK,EAAE;MAACD,eAAe,EAAEA;IAAe;EAAE;IAAAd,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAE/E;AAACa,GAAA,GAZQjB,MAAM;AAcf,eAAeT,IAAI;AAAA,IAAAc,EAAA,EAAAY,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}