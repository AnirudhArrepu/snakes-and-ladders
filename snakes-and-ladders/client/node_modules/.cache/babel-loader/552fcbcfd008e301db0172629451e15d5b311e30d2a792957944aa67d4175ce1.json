{"ast":null,"code":"var _jsxFileName = \"/home/anirudh/Desktop/Programming/WebD/snakes-and-ladders/client/src/components/grid.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport './grid.css';\nimport { socket } from '../App'; // Assuming you have socket in the main App\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Grid({\n  players\n}) {\n  const grid = generate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: grid.map((number, index) => /*#__PURE__*/_jsxDEV(Square, {\n      number: number,\n      players: players\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = Grid;\nfunction generate() {\n  let size = 10;\n  let squares = [];\n  let counter = size * size;\n  for (let row = 0; row < size; row++) {\n    let rowSquares = [];\n    for (let col = 0; col < size; col++) {\n      rowSquares.push(counter);\n      counter--;\n    }\n    if (row % 2 === 1) {\n      rowSquares.reverse();\n    }\n    squares = squares.concat(rowSquares);\n  }\n  return squares;\n}\nfunction Square({\n  number,\n  players\n}) {\n  let backgroundColor = 'transparent';\n  players.forEach(player => {\n    if (player.position === number) {\n      backgroundColor = player.color;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"square\",\n    style: {\n      backgroundColor: backgroundColor\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Square;\nexport default Grid;\nvar _c, _c2;\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"Square\");","map":{"version":3,"names":["React","useEffect","useState","socket","jsxDEV","_jsxDEV","Grid","players","grid","generate","className","children","map","number","index","Square","fileName","_jsxFileName","lineNumber","columnNumber","_c","size","squares","counter","row","rowSquares","col","push","reverse","concat","backgroundColor","forEach","player","position","color","style","_c2","$RefreshReg$"],"sources":["/home/anirudh/Desktop/Programming/WebD/snakes-and-ladders/client/src/components/grid.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './grid.css';\nimport { socket } from '../App';  // Assuming you have socket in the main App\n\nfunction Grid({ players }) {\n  const grid = generate();\n  \n  return (\n    <div className='grid'>\n      {grid.map((number, index) => (\n        <Square key={index} number={number} players={players} />\n      ))}\n    </div>\n  );\n}\n\nfunction generate() {\n  let size = 10;\n  let squares = [];\n  let counter = size * size;\n  \n  for (let row = 0; row < size; row++) {\n    let rowSquares = [];\n    for (let col = 0; col < size; col++) {\n      rowSquares.push(counter);\n      counter--;\n    }\n    if (row % 2 === 1) {\n      rowSquares.reverse();\n    }\n    squares = squares.concat(rowSquares);\n  }\n  return squares;\n}\n\nfunction Square({ number, players }) {\n  let backgroundColor = 'transparent';\n  \n  players.forEach(player => {\n    if (player.position === number) {\n      backgroundColor = player.color;\n    }\n  });\n\n  return (\n    <div className='square' style={{ backgroundColor: backgroundColor }} />\n  );\n}\n\nexport default Grid;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,YAAY;AACnB,SAASC,MAAM,QAAQ,QAAQ,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,IAAIA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EACzB,MAAMC,IAAI,GAAGC,QAAQ,CAAC,CAAC;EAEvB,oBACEJ,OAAA;IAAKK,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBH,IAAI,CAACI,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACtBT,OAAA,CAACU,MAAM;MAAaF,MAAM,EAAEA,MAAO;MAACN,OAAO,EAAEA;IAAQ,GAAxCO,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqC,CACxD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GAVQd,IAAI;AAYb,SAASG,QAAQA,CAAA,EAAG;EAClB,IAAIY,IAAI,GAAG,EAAE;EACb,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIC,OAAO,GAAGF,IAAI,GAAGA,IAAI;EAEzB,KAAK,IAAIG,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGH,IAAI,EAAEG,GAAG,EAAE,EAAE;IACnC,IAAIC,UAAU,GAAG,EAAE;IACnB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGL,IAAI,EAAEK,GAAG,EAAE,EAAE;MACnCD,UAAU,CAACE,IAAI,CAACJ,OAAO,CAAC;MACxBA,OAAO,EAAE;IACX;IACA,IAAIC,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE;MACjBC,UAAU,CAACG,OAAO,CAAC,CAAC;IACtB;IACAN,OAAO,GAAGA,OAAO,CAACO,MAAM,CAACJ,UAAU,CAAC;EACtC;EACA,OAAOH,OAAO;AAChB;AAEA,SAASP,MAAMA,CAAC;EAAEF,MAAM;EAAEN;AAAQ,CAAC,EAAE;EACnC,IAAIuB,eAAe,GAAG,aAAa;EAEnCvB,OAAO,CAACwB,OAAO,CAACC,MAAM,IAAI;IACxB,IAAIA,MAAM,CAACC,QAAQ,KAAKpB,MAAM,EAAE;MAC9BiB,eAAe,GAAGE,MAAM,CAACE,KAAK;IAChC;EACF,CAAC,CAAC;EAEF,oBACE7B,OAAA;IAAKK,SAAS,EAAC,QAAQ;IAACyB,KAAK,EAAE;MAAEL,eAAe,EAAEA;IAAgB;EAAE;IAAAd,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE3E;AAACiB,GAAA,GAZQrB,MAAM;AAcf,eAAeT,IAAI;AAAC,IAAAc,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}