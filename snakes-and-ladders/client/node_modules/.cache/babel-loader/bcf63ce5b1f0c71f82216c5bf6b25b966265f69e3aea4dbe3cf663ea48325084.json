{"ast":null,"code":"var _jsxFileName = \"/home/anirudh/Desktop/Programming/WebD/snakes-and-ladders/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport io from 'socket.io-client';\nimport Grid from './components/grid';\nimport Dice from './components/dice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:3001');\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [room, setRoom] = useState('');\n  const [showGame, setShowGame] = useState(false);\n  const [players, setPlayers] = useState([]);\n  const [color, setColor] = useState('#000000');\n  const [myIndex, setMyIndex] = useState(0);\n  const [turnIndex, setTurnIndex] = useState(null);\n  const [winner, setWinner] = useState('');\n  useEffect(() => {\n    socket.on('players_update', playersData => {\n      setPlayers(playersData);\n      setMyIndex(players.length - 1);\n    });\n    socket.on('update_turn_index', newTurnIndex => {\n      setTurnIndex(newTurnIndex);\n    });\n    socket.on('game_winner', winner => {\n      setWinner(winner);\n    });\n    return () => {\n      socket.off('players_update');\n      socket.off('update_turn_index');\n    };\n  }, []);\n  const joinRoom = () => {\n    if (username !== '' && room !== '') {\n      const player = {\n        name: username,\n        color: color,\n        position: 0\n      };\n      console.log(username, room);\n      socket.emit('join_room', {\n        room,\n        player\n      });\n      setShowGame(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !showGame ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Join game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        onChange: event => {\n          setUsername(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Room\",\n        onChange: event => {\n          setRoom(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        placeholder: \"Choose color\",\n        onChange: event => {\n          setColor(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinRoom,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        players: players\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Dice, {\n        players: players,\n        index: myIndex,\n        setIndex: setMyIndex,\n        turnIndex: turnIndex,\n        socket: socket,\n        winner: winner,\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"enaA5P+kj1dYY9faxCbHdrDpFS8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","io","Grid","Dice","jsxDEV","_jsxDEV","socket","connect","App","_s","username","setUsername","room","setRoom","showGame","setShowGame","players","setPlayers","color","setColor","myIndex","setMyIndex","turnIndex","setTurnIndex","winner","setWinner","on","playersData","length","newTurnIndex","off","joinRoom","player","name","position","console","log","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","event","target","value","onClick","index","setIndex","_c","$RefreshReg$"],"sources":["/home/anirudh/Desktop/Programming/WebD/snakes-and-ladders/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\nimport io from 'socket.io-client';\nimport Grid from './components/grid';\nimport Dice from './components/dice';\n\nconst socket = io.connect('http://localhost:3001')\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [room, setRoom] = useState('');\n  const [showGame, setShowGame] = useState(false);\n  const [players, setPlayers] = useState([]);\n  const [color, setColor] = useState('#000000');\n  const [myIndex, setMyIndex] = useState(0);\n  const [turnIndex, setTurnIndex] = useState(null);\n  const [winner, setWinner] = useState('');\n  \n  useEffect(() => {\n    socket.on('players_update', (playersData) => {\n        setPlayers(playersData);\n        setMyIndex(players.length -1);\n    });\n\n    socket.on('update_turn_index', (newTurnIndex) => {\n      setTurnIndex(newTurnIndex);\n    });\n\n    socket.on('game_winner', (winner)=>{\n      setWinner(winner);\n    })\n\n    return () => {\n      socket.off('players_update');\n      socket.off('update_turn_index');\n    };\n}, []);\n  \n  const joinRoom = ()=>{\n    if(username !== '' && room !== ''){\n      const player = {\n        name: username,\n        color: color,\n        position: 0,\n      }\n      console.log(username, room);\n      socket.emit('join_room', {room, player});\n      setShowGame(true);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {!showGame ? (\n        <div>\n          <h3>Join game</h3>\n          <input type='text' placeholder='Name' onChange={(event)=>{setUsername(event.target.value)}}/>\n          <input type='text' placeholder='Room'onChange={(event)=>{setRoom(event.target.value)}}/>\n          <input type='color' placeholder='Choose color' onChange={(event)=>{setColor(event.target.value)}}/>\n          <button onClick={joinRoom}>Join</button>\n        </div>)\n        : (\n          <div>\n            <Grid players={players}/>\n            <Dice players={players} index={myIndex} setIndex={setMyIndex} turnIndex={turnIndex} socket={socket} winner={winner} room={room}/>\n          </div>\n        )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}