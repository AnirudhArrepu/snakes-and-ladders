{"ast":null,"code":"var _jsxFileName = \"/home/anirudh/Desktop/Programming/WebD/snakes-and-ladders/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport io from 'socket.io-client';\nimport Grid from './components/grid';\nimport Dice from './components/dice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:3001');\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [color, setColor] = useState('#000000'); // Default color\n  const [room, setRoom] = useState('');\n  const [players, setPlayers] = useState([]);\n  const [winner, setWinner] = useState('');\n  const [showGame, setShowGame] = useState(false);\n  const [currentTurn, setCurrentTurn] = useState(0);\n\n  // Join room and setup game when player joins\n  const joinRoom = () => {\n    if (username !== '' && room !== '') {\n      console.log(username, room);\n      const newPlayer = {\n        name: username,\n        position: 0,\n        color: color\n      };\n      socket.emit('join_room', {\n        room,\n        newPlayer\n      });\n      setShowGame(true);\n    }\n  };\n\n  // Listen for updates to the players list and game winner\n  useEffect(() => {\n    socket.on('players_update', playersData => {\n      setPlayers(playersData);\n    });\n    socket.on('game_winner', winnerName => {\n      setWinner(winnerName);\n    });\n    return () => {\n      socket.off('players_update');\n      socket.off('game_winner');\n    };\n  }, []);\n\n  // Update player position after dice roll\n  const updatePlayerPosition = (index, rolledNum) => {\n    setPlayers(prevPlayers => {\n      return prevPlayers.map((player, i) => {\n        if (i === index) {\n          let newPosition = player.position + rolledNum;\n\n          // Snakes and ladders positions\n          const snakes = {\n            28: 10,\n            37: 3,\n            48: 16,\n            75: 32,\n            96: 42,\n            94: 71\n          };\n          const ladders = {\n            4: 56,\n            12: 50,\n            14: 55,\n            22: 58,\n            41: 79,\n            54: 88\n          };\n          if (snakes[newPosition]) {\n            newPosition = snakes[newPosition];\n          } else if (ladders[newPosition]) {\n            newPosition = ladders[newPosition];\n          }\n          if (newPosition > 100) {\n            newPosition -= rolledNum;\n          }\n          if (newPosition === 100) {\n            setWinner(player.name);\n            socket.emit('game_winner', player.name);\n          }\n          socket.emit('player_move', {\n            index,\n            newPosition\n          });\n          return {\n            ...player,\n            position: newPosition\n          };\n        } else {\n          return player;\n        }\n      });\n    });\n    setCurrentTurn(prevTurn => (prevTurn + 1) % players.length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !showGame ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Join game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: color,\n        onChange: event => setColor(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Room\",\n        value: room,\n        onChange: event => setRoom(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinRoom,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-container\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          players: players\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-container\",\n        children: [/*#__PURE__*/_jsxDEV(Dice, {\n          players: players,\n          updatePlayerPosition: updatePlayerPosition,\n          currentTurn: currentTurn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), winner && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [winner, \" is the winner!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"csMW/pgeNOv9iqQnHQ++yw4/eOc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","Grid","Dice","jsxDEV","_jsxDEV","socket","connect","App","_s","username","setUsername","color","setColor","room","setRoom","players","setPlayers","winner","setWinner","showGame","setShowGame","currentTurn","setCurrentTurn","joinRoom","console","log","newPlayer","name","position","emit","on","playersData","winnerName","off","updatePlayerPosition","index","rolledNum","prevPlayers","map","player","i","newPosition","snakes","ladders","prevTurn","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","event","target","onClick","_c","$RefreshReg$"],"sources":["/home/anirudh/Desktop/Programming/WebD/snakes-and-ladders/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport io from 'socket.io-client';\nimport Grid from './components/grid';\nimport Dice from './components/dice';\n\nconst socket = io.connect('http://localhost:3001');\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [color, setColor] = useState('#000000'); // Default color\n  const [room, setRoom] = useState('');\n  const [players, setPlayers] = useState([]);\n  const [winner, setWinner] = useState('');\n  const [showGame, setShowGame] = useState(false);\n  const [currentTurn, setCurrentTurn] = useState(0);\n\n  // Join room and setup game when player joins\n  const joinRoom = () => {\n    if (username !== '' && room !== '') {\n      console.log(username, room);\n      const newPlayer = { name: username, position: 0, color: color };\n      socket.emit('join_room', { room, newPlayer });\n      setShowGame(true);\n    }\n  };\n\n  // Listen for updates to the players list and game winner\n  useEffect(() => {\n    socket.on('players_update', (playersData) => {\n      setPlayers(playersData);\n    });\n\n    socket.on('game_winner', (winnerName) => {\n      setWinner(winnerName);\n    });\n\n    return () => {\n      socket.off('players_update');\n      socket.off('game_winner');\n    };\n  }, []);\n\n  // Update player position after dice roll\n  const updatePlayerPosition = (index, rolledNum) => {\n    setPlayers((prevPlayers) => {\n      return prevPlayers.map((player, i) => {\n        if (i === index) {\n          let newPosition = player.position + rolledNum;\n\n          // Snakes and ladders positions\n          const snakes = { 28: 10, 37: 3, 48: 16, 75: 32, 96: 42, 94: 71 };\n          const ladders = { 4: 56, 12: 50, 14: 55, 22: 58, 41: 79, 54: 88 };\n\n          if (snakes[newPosition]) {\n            newPosition = snakes[newPosition];\n          } else if (ladders[newPosition]) {\n            newPosition = ladders[newPosition];\n          }\n\n          if (newPosition > 100) {\n            newPosition -= rolledNum;\n          }\n\n          if (newPosition === 100) {\n            setWinner(player.name);\n            socket.emit('game_winner', player.name);\n          }\n\n          socket.emit('player_move', { index, newPosition });\n          return { ...player, position: newPosition };\n        } else {\n          return player;\n        }\n      });\n    });\n\n    setCurrentTurn((prevTurn) => (prevTurn + 1) % players.length);\n  };\n\n  return (\n    <div className=\"App\">\n      {!showGame ? (\n        <div>\n          <h3>Join game</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <input\n            type=\"color\"\n            value={color}\n            onChange={(event) => setColor(event.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Room\"\n            value={room}\n            onChange={(event) => setRoom(event.target.value)}\n          />\n          <button onClick={joinRoom}>Join</button>\n        </div>\n      ) : (\n        <div className=\"game-container\">\n          <div className=\"grid-container\">\n            <Grid players={players} />\n          </div>\n          <div className=\"side-container\">\n            <Dice\n              players={players}\n              updatePlayerPosition={updatePlayerPosition}\n              currentTurn={currentTurn}\n            />\n            {winner && <h2>{winner} is the winner!</h2>}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}