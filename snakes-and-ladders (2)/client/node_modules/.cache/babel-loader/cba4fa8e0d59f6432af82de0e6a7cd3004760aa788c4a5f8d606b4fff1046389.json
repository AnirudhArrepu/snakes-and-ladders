{"ast":null,"code":"var _jsxFileName = \"/home/anirudh/Desktop/Programming/WebD/snakes-and-ladders/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Grid from './components/grid';\nimport Dice from './components/dice';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:3001');\nfunction App() {\n  _s();\n  var _players$currentPlaye;\n  const [username, setUsername] = useState('');\n  const [room, setRoom] = useState('');\n  const [players, setPlayers] = useState([]);\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\n  const [showGame, setShowGame] = useState(false);\n  const joinRoom = () => {\n    if (username !== '' && room !== '') {\n      const newPlayer = {\n        name: username,\n        position: 0,\n        color: generateColor()\n      };\n      socket.emit('join_room', {\n        room,\n        newPlayer\n      });\n      setShowGame(true);\n    }\n  };\n  const generateColor = () => {\n    // Return a random color for each player\n    const colors = ['#FF5733', '#33FF57', '#3357FF', '#F1C40F'];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n  const updatePlayerPosition = (index, rolledNum) => {\n    setPlayers(prevPlayers => prevPlayers.map((player, i) => {\n      if (i === index) {\n        let newPosition = player.position + rolledNum;\n\n        // Handle snakes and ladders logic (you can define this separately)\n        newPosition = handleSnakesAndLadders(newPosition);\n        if (newPosition >= 100) {\n          newPosition = 100; // Cap the position at 100\n        }\n        return {\n          ...player,\n          position: newPosition\n        };\n      }\n      return player;\n    }));\n\n    // Move to the next player's turn\n    setCurrentPlayerIndex(prevIndex => (prevIndex + 1) % players.length);\n  };\n  const handleSnakesAndLadders = position => {\n    const ladders = {\n      4: 56,\n      12: 50,\n      14: 55,\n      22: 58,\n      41: 79,\n      54: 88\n    };\n    const snakes = {\n      28: 10,\n      37: 3,\n      48: 16,\n      75: 32,\n      96: 42,\n      94: 71\n    };\n    if (snakes[position]) return snakes[position];\n    if (ladders[position]) return ladders[position];\n    return position;\n  };\n  useEffect(() => {\n    socket.on('players_update', playersData => {\n      setPlayers(playersData);\n    });\n    return () => {\n      socket.off('players_update');\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !showGame ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Join game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Room\",\n        onChange: event => setRoom(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinRoom,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        players: players\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Dice, {\n        socket: socket,\n        room: room,\n        players: players,\n        currentPlayerIndex: currentPlayerIndex,\n        isMyTurn: ((_players$currentPlaye = players[currentPlayerIndex]) === null || _players$currentPlaye === void 0 ? void 0 : _players$currentPlaye.name) === username,\n        updatePlayerPosition: updatePlayerPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ONS9OFnAnFgaY3MreX7PgtzKB/s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","Grid","Dice","jsxDEV","_jsxDEV","socket","connect","App","_s","_players$currentPlaye","username","setUsername","room","setRoom","players","setPlayers","currentPlayerIndex","setCurrentPlayerIndex","showGame","setShowGame","joinRoom","newPlayer","name","position","color","generateColor","emit","colors","Math","floor","random","length","updatePlayerPosition","index","rolledNum","prevPlayers","map","player","i","newPosition","handleSnakesAndLadders","prevIndex","ladders","snakes","on","playersData","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","event","target","value","onClick","isMyTurn","_c","$RefreshReg$"],"sources":["/home/anirudh/Desktop/Programming/WebD/snakes-and-ladders/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Grid from './components/grid';\nimport Dice from './components/dice';\nimport './App.css';\n\nconst socket = io.connect('http://localhost:3001');\n\nfunction App() {\n    const [username, setUsername] = useState('');\n    const [room, setRoom] = useState('');\n    const [players, setPlayers] = useState([]);\n    const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\n    const [showGame, setShowGame] = useState(false);\n    \n    const joinRoom = () => {\n        if (username !== '' && room !== '') {\n            const newPlayer = { name: username, position: 0, color: generateColor() };\n            socket.emit('join_room', { room, newPlayer });\n            setShowGame(true);\n        }\n    };\n\n    const generateColor = () => {\n        // Return a random color for each player\n        const colors = ['#FF5733', '#33FF57', '#3357FF', '#F1C40F'];\n        return colors[Math.floor(Math.random() * colors.length)];\n    };\n\n    const updatePlayerPosition = (index, rolledNum) => {\n        setPlayers(prevPlayers =>\n            prevPlayers.map((player, i) => {\n                if (i === index) {\n                    let newPosition = player.position + rolledNum;\n\n                    // Handle snakes and ladders logic (you can define this separately)\n                    newPosition = handleSnakesAndLadders(newPosition);\n\n                    if (newPosition >= 100) {\n                        newPosition = 100; // Cap the position at 100\n                    }\n\n                    return { ...player, position: newPosition };\n                }\n                return player;\n            })\n        );\n\n        // Move to the next player's turn\n        setCurrentPlayerIndex((prevIndex) => (prevIndex + 1) % players.length);\n    };\n\n    const handleSnakesAndLadders = (position) => {\n        const ladders = { 4: 56, 12: 50, 14: 55, 22: 58, 41: 79, 54: 88 };\n        const snakes = { 28: 10, 37: 3, 48: 16, 75: 32, 96: 42, 94: 71 };\n        \n        if (snakes[position]) return snakes[position];\n        if (ladders[position]) return ladders[position];\n        return position;\n    };\n\n    useEffect(() => {\n        socket.on('players_update', (playersData) => {\n            setPlayers(playersData);\n        });\n\n        return () => {\n            socket.off('players_update');\n        };\n    }, [socket]);\n\n    return (\n        <div className=\"App\">\n            {!showGame ? (\n                <div>\n                    <h3>Join game</h3>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Name\"\n                        onChange={(event) => setUsername(event.target.value)}\n                    />\n                    <input\n                        type=\"text\"\n                        placeholder=\"Room\"\n                        onChange={(event) => setRoom(event.target.value)}\n                    />\n                    <button onClick={joinRoom}>Join</button>\n                </div>\n            ) : (\n                <div className=\"game\">\n                    <Grid players={players} />\n                    <Dice\n                        socket={socket}\n                        room={room}\n                        players={players}\n                        currentPlayerIndex={currentPlayerIndex}\n                        isMyTurn={players[currentPlayerIndex]?.name === username}\n                        updatePlayerPosition={updatePlayerPosition}\n                    />\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}