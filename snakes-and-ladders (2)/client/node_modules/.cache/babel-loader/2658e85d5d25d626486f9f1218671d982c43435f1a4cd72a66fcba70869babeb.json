{"ast":null,"code":"var _jsxFileName = \"/home/anirudh/Desktop/Programming/WebD/snakes-and-ladders/client/src/components/dice.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dice({\n  players,\n  updatePlayerPosition,\n  currentTurn,\n  socket\n}) {\n  _s();\n  const [rolledNum, setRolledNum] = useState(0);\n\n  // Emit the dice roll to other players\n  const rollDice = () => {\n    const rolled = Math.floor(Math.random() * 6) + 1;\n    setRolledNum(rolled);\n    socket.emit('dice_roll', {\n      rolled,\n      currentTurn\n    });\n  };\n\n  // Listen for dice rolls from the server\n  useEffect(() => {\n    socket.on('dice_roll', data => {\n      setRolledNum(data.rolled);\n      updatePlayerPosition(data.currentTurn, data.rolled);\n    });\n  }, [updatePlayerPosition]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diceBody\",\n    children: players.length > 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"numberRolled\",\n        children: [\"Number: \", rolledNum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerCall\",\n        children: [\"Player \", currentTurn + 1, \"'s turn!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: rollDice,\n        className: \"roll\",\n        children: \"ROLL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Add players to start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Dice, \"aOlXujg+zwYhukwrCOYh2/tY9C0=\");\n_c = Dice;\nexport default Dice;\nvar _c;\n$RefreshReg$(_c, \"Dice\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Dice","players","updatePlayerPosition","currentTurn","socket","_s","rolledNum","setRolledNum","rollDice","rolled","Math","floor","random","emit","on","data","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/anirudh/Desktop/Programming/WebD/snakes-and-ladders/client/src/components/dice.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Dice({ players, updatePlayerPosition, currentTurn, socket }) {\n  const [rolledNum, setRolledNum] = useState(0);\n\n  // Emit the dice roll to other players\n  const rollDice = () => {\n    const rolled = Math.floor(Math.random() * 6) + 1;\n    setRolledNum(rolled);\n    socket.emit('dice_roll', { rolled, currentTurn });\n  };\n\n  // Listen for dice rolls from the server\n  useEffect(() => {\n    socket.on('dice_roll', (data) => {\n      setRolledNum(data.rolled);\n      updatePlayerPosition(data.currentTurn, data.rolled);\n    });\n  }, [updatePlayerPosition]);\n\n  return (\n    <div className=\"diceBody\">\n      {players.length > 1 ? (\n        <>\n          <div className=\"numberRolled\">Number: {rolledNum}</div>\n          <div className=\"playerCall\">Player {currentTurn + 1}'s turn!</div>\n          <button onClick={rollDice} className=\"roll\">ROLL</button>\n        </>\n      ) : (\n        <div>Add players to start</div>\n      )}\n    </div>\n  );\n}\n\nexport default Dice;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,SAASC,IAAIA,CAAC;EAAEC,OAAO;EAAEC,oBAAoB;EAAEC,WAAW;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACpE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;;EAE7C;EACA,MAAMc,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAChDL,YAAY,CAACE,MAAM,CAAC;IACpBL,MAAM,CAACS,IAAI,CAAC,WAAW,EAAE;MAAEJ,MAAM;MAAEN;IAAY,CAAC,CAAC;EACnD,CAAC;;EAED;EACAR,SAAS,CAAC,MAAM;IACdS,MAAM,CAACU,EAAE,CAAC,WAAW,EAAGC,IAAI,IAAK;MAC/BR,YAAY,CAACQ,IAAI,CAACN,MAAM,CAAC;MACzBP,oBAAoB,CAACa,IAAI,CAACZ,WAAW,EAAEY,IAAI,CAACN,MAAM,CAAC;IACrD,CAAC,CAAC;EACJ,CAAC,EAAE,CAACP,oBAAoB,CAAC,CAAC;EAE1B,oBACEL,OAAA;IAAKmB,SAAS,EAAC,UAAU;IAAAC,QAAA,EACtBhB,OAAO,CAACiB,MAAM,GAAG,CAAC,gBACjBrB,OAAA,CAAAE,SAAA;MAAAkB,QAAA,gBACEpB,OAAA;QAAKmB,SAAS,EAAC,cAAc;QAAAC,QAAA,GAAC,UAAQ,EAACX,SAAS;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvDzB,OAAA;QAAKmB,SAAS,EAAC,YAAY;QAAAC,QAAA,GAAC,SAAO,EAACd,WAAW,GAAG,CAAC,EAAC,UAAQ;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClEzB,OAAA;QAAQ0B,OAAO,EAAEf,QAAS;QAACQ,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACzD,CAAC,gBAEHzB,OAAA;MAAAoB,QAAA,EAAK;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAC/B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjB,EAAA,CA/BQL,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAiCb,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}