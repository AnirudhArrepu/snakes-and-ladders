{"ast":null,"code":"var _jsxFileName = \"/home/anirudh/Desktop/Programming/WebD/snakes-and-ladders/client/src/components/dice.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dice({\n  players,\n  winner,\n  index,\n  setIndex,\n  socket,\n  turnIndex,\n  room\n}) {\n  _s();\n  const [rolledNum, setRolledNum] = useState(0);\n  const size = players.length;\n  const [yourTurn, setYourTurn] = useState(false);\n  useEffect(() => {\n    if (players.length > 0) {\n      setYourTurn(turnIndex == index);\n    }\n  }, [players, turnIndex]);\n  function roll() {\n    const rolled = Math.floor(Math.random() * 6) + 1;\n    setRolledNum(rolled);\n    socket.emit('roll_dice', {\n      room: room,\n      rolledNum: rolled\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diceBody\",\n    children: winner === '' ? size > 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"numberRolled\",\n        children: [\"Number: \", rolledNum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerCall\",\n        children: [\"Player \", turnIndex + 1, \"'s turn!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this), yourTurn ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: roll,\n        className: \"roll\",\n        children: \"ROLL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 81\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Add players to start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [winner, \" is the winner!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(Dice, \"WCwmwIJKMmtOvjF4wo1KDUOByHE=\");\n_c = Dice;\nexport default Dice;\nvar _c;\n$RefreshReg$(_c, \"Dice\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Dice","players","winner","index","setIndex","socket","turnIndex","room","_s","rolledNum","setRolledNum","size","length","yourTurn","setYourTurn","roll","rolled","Math","floor","random","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/anirudh/Desktop/Programming/WebD/snakes-and-ladders/client/src/components/dice.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\n\nfunction Dice({players, winner, index, setIndex, socket, turnIndex, room}){\n    const [rolledNum, setRolledNum] = useState(0);\n    const size = players.length;\n    const [yourTurn, setYourTurn] = useState(false);\n\n    useEffect(() => {\n        if (players.length > 0) {\n          setYourTurn(turnIndex == index);\n        }\n      }, [players, turnIndex]);\n\n    function roll() {\n            const rolled = Math.floor(Math.random() * 6) + 1;\n            setRolledNum(rolled);\n            socket.emit('roll_dice', { room: room, rolledNum: rolled });\n    }\n\n    return (\n        <div className=\"diceBody\">\n            {winner === '' ? (\n                size > 1 ? ( \n                    <>\n                        <div className=\"numberRolled\">Number: {rolledNum}</div>\n                        <div className=\"playerCall\">Player {turnIndex + 1}'s turn!</div>\n                        {yourTurn ? \n                        <button onClick={roll} className=\"roll\">ROLL</button> : <div></div>}\n                    </>\n                ) : (\n                    <div>Add players to start</div>\n                )\n            ) : (\n                <div>{winner} is the winner!</div>\n            )}\n        </div>\n    );\n}\n\nexport default Dice;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,SAASC,IAAIA,CAAC;EAACC,OAAO;EAAEC,MAAM;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,SAAS;EAAEC;AAAI,CAAC,EAAC;EAAAC,EAAA;EACtE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAMiB,IAAI,GAAGV,OAAO,CAACW,MAAM;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACZ,IAAIM,OAAO,CAACW,MAAM,GAAG,CAAC,EAAE;MACtBE,WAAW,CAACR,SAAS,IAAIH,KAAK,CAAC;IACjC;EACF,CAAC,EAAE,CAACF,OAAO,EAAEK,SAAS,CAAC,CAAC;EAE1B,SAASS,IAAIA,CAAA,EAAG;IACR,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAChDT,YAAY,CAACM,MAAM,CAAC;IACpBX,MAAM,CAACe,IAAI,CAAC,WAAW,EAAE;MAAEb,IAAI,EAAEA,IAAI;MAAEE,SAAS,EAAEO;IAAO,CAAC,CAAC;EACnE;EAEA,oBACInB,OAAA;IAAKwB,SAAS,EAAC,UAAU;IAAAC,QAAA,EACpBpB,MAAM,KAAK,EAAE,GACVS,IAAI,GAAG,CAAC,gBACJd,OAAA,CAAAE,SAAA;MAAAuB,QAAA,gBACIzB,OAAA;QAAKwB,SAAS,EAAC,cAAc;QAAAC,QAAA,GAAC,UAAQ,EAACb,SAAS;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvD7B,OAAA;QAAKwB,SAAS,EAAC,YAAY;QAAAC,QAAA,GAAC,SAAO,EAAChB,SAAS,GAAG,CAAC,EAAC,UAAQ;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC/Db,QAAQ,gBACThB,OAAA;QAAQ8B,OAAO,EAAEZ,IAAK;QAACM,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAAG7B,OAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC;IAAA,eACrE,CAAC,gBAEH7B,OAAA;MAAAyB,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACjC,gBAED7B,OAAA;MAAAyB,QAAA,GAAMpB,MAAM,EAAC,iBAAe;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EACpC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAClB,EAAA,CAnCQR,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAqCb,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}