{"ast":null,"code":"var _jsxFileName = \"/home/anirudh/Desktop/Programming/WebD/snakes-and-ladders/client/src/components/dice.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dice({\n  players,\n  updatePlayerPosition,\n  winner\n}) {\n  _s();\n  const [rolledNum, setRolledNum] = useState(0);\n  const [index, setIndex] = useState(0);\n  const size = players.length;\n  function roll() {\n    if (size > 1) {\n      const rolled = Math.floor(Math.random() * 6) + 1;\n      setRolledNum(rolled);\n      updatePlayerPosition(index, rolled);\n      setIndex((index + 1) % size);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diceBody\",\n    children: winner === '' ? size > 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"numberRolled\",\n        children: [\"Number: \", rolledNum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerCall\",\n        children: [\"Player \", index + 1, \"'s turn!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: roll,\n        className: \"roll\",\n        children: \"ROLL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Add players to start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [winner, \" is the winner!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(Dice, \"CvjIweON/QSJG2gz9b83/XPETZg=\");\n_c = Dice;\nexport default Dice;\nvar _c;\n$RefreshReg$(_c, \"Dice\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Dice","players","updatePlayerPosition","winner","_s","rolledNum","setRolledNum","index","setIndex","size","length","roll","rolled","Math","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/anirudh/Desktop/Programming/WebD/snakes-and-ladders/client/src/components/dice.jsx"],"sourcesContent":["import { useState } from \"react\"\n\nfunction Dice({players, updatePlayerPosition, winner}){\n    const [rolledNum, setRolledNum] = useState(0);\n    const [index, setIndex] = useState(0);\n    const size = players.length;\n\n    function roll(){\n        if (size > 1) {\n            const rolled = Math.floor(Math.random() * 6) + 1;\n            setRolledNum(rolled);\n            updatePlayerPosition(index, rolled);\n            setIndex((index + 1) % size);\n        }\n    }\n\n    return (\n        <div className=\"diceBody\">\n            {winner === '' ? (\n                size > 1 ? ( \n                    <>\n                        <div className=\"numberRolled\">Number: {rolledNum}</div>\n                        <div className=\"playerCall\">Player {index + 1}'s turn!</div>\n                        <button onClick={roll} className=\"roll\">ROLL</button>\n                    </>\n                ) : (\n                    <div>Add players to start</div>\n                )\n            ) : (\n                <div>{winner} is the winner!</div>\n            )}\n        </div>\n    );\n}\n\nexport default Dice;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,SAASC,IAAIA,CAAC;EAACC,OAAO;EAAEC,oBAAoB;EAAEC;AAAM,CAAC,EAAC;EAAAC,EAAA;EAClD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMc,IAAI,GAAGR,OAAO,CAACS,MAAM;EAE3B,SAASC,IAAIA,CAAA,EAAE;IACX,IAAIF,IAAI,GAAG,CAAC,EAAE;MACV,MAAMG,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;MAChDT,YAAY,CAACM,MAAM,CAAC;MACpBV,oBAAoB,CAACK,KAAK,EAAEK,MAAM,CAAC;MACnCJ,QAAQ,CAAC,CAACD,KAAK,GAAG,CAAC,IAAIE,IAAI,CAAC;IAChC;EACJ;EAEA,oBACIZ,OAAA;IAAKmB,SAAS,EAAC,UAAU;IAAAC,QAAA,EACpBd,MAAM,KAAK,EAAE,GACVM,IAAI,GAAG,CAAC,gBACJZ,OAAA,CAAAE,SAAA;MAAAkB,QAAA,gBACIpB,OAAA;QAAKmB,SAAS,EAAC,cAAc;QAAAC,QAAA,GAAC,UAAQ,EAACZ,SAAS;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvDxB,OAAA;QAAKmB,SAAS,EAAC,YAAY;QAAAC,QAAA,GAAC,SAAO,EAACV,KAAK,GAAG,CAAC,EAAC,UAAQ;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5DxB,OAAA;QAAQyB,OAAO,EAAEX,IAAK;QAACK,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACvD,CAAC,gBAEHxB,OAAA;MAAAoB,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACjC,gBAEDxB,OAAA;MAAAoB,QAAA,GAAMd,MAAM,EAAC,iBAAe;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EACpC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACjB,EAAA,CA/BQJ,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AAiCb,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}